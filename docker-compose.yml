version: "3.3"
services:
    postgres:
        image: postgres
        environment:
            - "POSTGRES_PASSWORD=nebulapass"
            - "PGDATA=/var/lib/postgresql/data/pgdata"
        volumes:
            - ./data/database:/var/lib/postgresql/data
            - ./support/postgres-init:/docker-entrypoint-initdb.d

    memcached:
        image: memcached

    nginx:
        image: weseek/nginx-nchan
        ports:
            - "8080:80"
        expose:
            - "80"
        volumes:
            - ./support/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            - ./data:/data
        depends_on:
            - "core"

    #
    # Nebula core runs hub (API server) and nebula-setup
    #

    core:
        build: ./nebula
        restart: always
        volumes:
            - ./nebula/nebula:/opt/nebula
            - ./nebula/nebula-setup:/opt/nebula-setup
            - ./settings:/opt/nebula-setup/template
            - ./data:/data
        depends_on:
            - postgres
            - memcached
        entrypoint: ./manage.py run hub

    #
    # Worker hosts basic services such as mesg, watch, meta...
    #

    worker:
        build: ./nebula
        hostname: "worker"
        restart: always
        volumes:
            - ./nebula/nebula:/opt/nebula
            - ./data:/data
        depends_on:
            - postgres
            - memcached
        entrypoint: ./nebula.py

    #
    # Playout node hosts a play instance configured to run a CONTI channel
    #

    playout:
        build: ./nebula
        hostname: "playout"
        restart: always
        volumes:
            - ./nebula/nebula:/opt/nebula
            - ./data:/data
        depends_on:
            - postgres
            - memcached
        entrypoint: ./nebula.py
